first_val <- x[1]
return(first_val)
}
for (i in 1:2) {
d[[i]] <- melt(d[[i]], id = "FISCAL.YEAR")
colnames(d[[i]]) <- c("Station", "Year", "Ridership")
d[[i]] <- d[[i]] %>%
mutate(Year = substr(Year, 2, 5)) %>%
mutate(Year = as.numeric(Year)) %>%
arrange(Station, Year) %>%
filter(Year >= 2001 | Year <= 2016) %>%
group_by(Station) %>%
mutate(Index = Ridership / get_first(Ridership) * 100)
}
# Plot data
for (i in 2001:2016) {
ggplot(filter(d$weekday, Year == i), aes(x = Station, y = Index, group = 1)) +
geom_line(aes(y = 100)) +
geom_line(color = "#207DC1", size = 3) +
geom_point(fill = "white", color = "black", pch = 21, size = 2.5) +
ylim(0, 300) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle(i) + ylab("Index of average weekday ridership (2001 = 100)")
ggsave(paste(toString(i), ".png"), width = 7.5, height = 6)
}
# Plot data
for (i in 2001:2016) {
ggplot(filter(d$weekday, Year == i), aes(x = Station, y = Index, group = 1)) +
geom_line(aes(y = 100)) +
geom_line(color = "#207DC1", size = 3) +
geom_point(fill = "white", color = "black", pch = 21, size = 2.5) +
ylim(0, 300) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle(i) +
ylab("Index of average weekday ridership (2001 = 100)") +
xlab("")
ggsave(paste(toString(i), ".png"), width = 7.5, height = 6)
}
?ggtitle
for (i in 2001:2016) {
ggplot(filter(d$weekday, Year == i), aes(x = Station, y = Index, group = 1)) +
geom_line(aes(y = 100)) +
geom_line(color = "#207DC1", size = 3) +
geom_point(fill = "white", color = "black", pch = 21, size = 2.5) +
ylim(0, 300) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle(paste0("Relative growth in MFL ridership," i) +
ylab("Index of average weekday ridership (2001 = 100)") +
xlab("") +
ggsave(paste(toString(i), ".png"), width = 7.5, height = 6)
}
# Plot data
for (i in 2001:2016) {
ggplot(filter(d$weekday, Year == i), aes(x = Station, y = Index, group = 1)) +
geom_line(aes(y = 100)) +
geom_line(color = "#207DC1", size = 3) +
geom_point(fill = "white", color = "black", pch = 21, size = 2.5) +
ylim(0, 300) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle(paste0("Relative growth in MFL ridership," i) +
ylab("Index of average weekday ridership (2001 = 100)") +
xlab("")
ggsave(paste(toString(i), ".png"), width = 7.5, height = 6)
}
for (i in 2001:2016) {
ggplot(filter(d$weekday, Year == i), aes(x = Station, y = Index, group = 1)) +
geom_line(aes(y = 100)) +
geom_line(color = "#207DC1", size = 3) +
geom_point(fill = "white", color = "black", pch = 21, size = 2.5) +
ylim(0, 300) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle(paste0("Relative growth in MFL ridership," i)) +
ylab("Index of average weekday ridership (2001 = 100)") +
xlab("")
ggsave(paste(toString(i), ".png"), width = 7.5, height = 6)
}
for (i in 2001:2016) {
ggplot(filter(d$weekday, Year == i), aes(x = Station, y = Index, group = 1)) +
geom_line(aes(y = 100)) +
geom_line(color = "#207DC1", size = 3) +
geom_point(fill = "white", color = "black", pch = 21, size = 2.5) +
ylim(0, 300) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle(paste0("Relative growth in MFL ridership,", i)) +
ylab("Index of average weekday ridership (2001 = 100)") +
xlab("")
ggsave(paste(toString(i), ".png"), width = 7.5, height = 6)
}
# Plot data
for (i in 2001:2016) {
ggplot(filter(d$weekday, Year == i), aes(x = Station, y = Index, group = 1)) +
geom_line(aes(y = 100)) +
geom_line(color = "#207DC1", size = 3) +
geom_point(fill = "white", color = "black", pch = 21, size = 2.5) +
ylim(0, 300) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle(paste0("Relative growth in MFL ridership, ", i)) +
ylab("Index of average weekday ridership (2001 = 100)") +
xlab("")
ggsave(paste(toString(i), ".png"), width = 7.5, height = 6)
}
#====================================
# Script to create MFL visualization
#====================================
# Housekpeeing
rm(list = ls())
setwd("/Users/johnricco/Documents/Projects/MFL")
library(dplyr)
library(ggplot2)
library(reshape2)
# Read and transform data
d <- lapply(c("weekday.csv", "annual.csv"), read.csv, stringsAsFactors = F)
d <- lapply(d, function(x) x <- x %>% mutate(order = 1:28))
names(d) <- c("weekday", "annual")
d$weekday$FISCAL.YEAR <- factor(d$weekday$order, levels = d$weekday$order, labels = d$weekday$FISCAL.YEAR, ordered = T)
d$annual$FISCAL.YEAR <- factor(d$annual$order, levels = d$annual$order, labels = d$annual$FISCAL.YEAR, ordered = T)
get_first <- function(x) {
first_val <- x[1]
return(first_val)
}
for (i in 1:2) {
d[[i]] <- melt(d[[i]], id = "FISCAL.YEAR")
colnames(d[[i]]) <- c("Station", "Year", "Ridership")
d[[i]] <- d[[i]] %>%
mutate(Year = substr(Year, 2, 5)) %>%
mutate(Year = as.numeric(Year)) %>%
arrange(Station, Year) %>%
filter(Year >= 2001 | Year <= 2016) %>%
group_by(Station) %>%
mutate(Index = Ridership / get_first(Ridership) * 100) %>%
mutate(Change = Ridership - get_first(Ridership))
}
# Plot data
for (i in 2001:2016) {
ggplot(filter(d$weekday, Year == i), aes(x = Station, y = Index, group = 1)) +
geom_line(aes(y = 100)) +
geom_line(color = "#207DC1", size = 3) +
geom_point(fill = "white", color = "black", pch = 21, size = 2.5) +
ylim(0, 300) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle(paste0("Relative growth in MFL ridership, ", i)) +
ylab("Index of average weekday ridership (2001 = 100)") +
xlab("")
ggsave(paste0(toString(i), ".png"), width = 7.5, height = 6)
}
for (i in 2001:2016) {
ggplot(filter(d$weekday, Year == i), aes(x = Station, y = Change, group = 1)) +
geom_line(aes(y = 100)) +
geom_line(color = "#207DC1", size = 3) +
geom_point(fill = "white", color = "black", pch = 21, size = 2.5) +
ylim(0, 300) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle(paste0("Absolute change in MFL ridership, ", i)) +
ylab("Difference in ridership from 2001") +
xlab("")
ggsave(paste0("abs_", toString(i), ".png"), width = 7.5, height = 6)
}
warnings()
#====================================
# Script to create MFL visualization
#====================================
# Housekpeeing
rm(list = ls())
setwd("/Users/johnricco/Documents/Projects/MFL")
library(dplyr)
library(ggplot2)
library(reshape2)
# Read and transform data
d <- lapply(c("weekday.csv", "annual.csv"), read.csv, stringsAsFactors = F)
d <- lapply(d, function(x) x <- x %>% mutate(order = 1:28))
names(d) <- c("weekday", "annual")
d$weekday$FISCAL.YEAR <- factor(d$weekday$order, levels = d$weekday$order, labels = d$weekday$FISCAL.YEAR, ordered = T)
d$annual$FISCAL.YEAR <- factor(d$annual$order, levels = d$annual$order, labels = d$annual$FISCAL.YEAR, ordered = T)
get_first <- function(x) {
first_val <- x[1]
return(first_val)
}
for (i in 1:2) {
d[[i]] <- melt(d[[i]], id = "FISCAL.YEAR")
colnames(d[[i]]) <- c("Station", "Year", "Ridership")
d[[i]] <- d[[i]] %>%
mutate(Year = substr(Year, 2, 5)) %>%
mutate(Year = as.numeric(Year)) %>%
arrange(Station, Year) %>%
filter(Year >= 2001 | Year <= 2016) %>%
group_by(Station) %>%
mutate(Index = Ridership / get_first(Ridership) * 100) %>%
mutate(Change = Ridership - get_first(Ridership))
}
# Plot data
for (i in 2001:2016) {
ggplot(filter(d$weekday, Year == i), aes(x = Station, y = Index, group = 1)) +
geom_line(aes(y = 100)) +
geom_line(color = "#207DC1", size = 3) +
geom_point(fill = "white", color = "black", pch = 21, size = 2.5) +
ylim(0, 300) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle(paste0("Relative growth in MFL ridership, ", i)) +
ylab("Index of average weekday ridership (2001 = 100)") +
xlab("")
ggsave(paste0(toString(i), ".png"), width = 7.5, height = 6)
}
for (i in 2001:2016) {
ggplot(filter(d$weekday, Year == i), aes(x = Station, y = Change, group = 1)) +
geom_line(aes(y = 100)) +
geom_line(color = "#207DC1", size = 3) +
geom_point(fill = "white", color = "black", pch = 21, size = 2.5) +
ylim(-6000, 6000) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle(paste0("Absolute change in MFL ridership, ", i)) +
ylab("Difference in ridership from 2001") +
xlab("")
ggsave(paste0("abs_", toString(i), ".png"), width = 7.5, height = 6)
}
for (i in 2001:2016) {
ggplot(filter(d$weekday, Year == i), aes(x = Station, y = Change, group = 1)) +
geom_line(aes(y = 0)) +
geom_line(color = "#207DC1", size = 3) +
geom_point(fill = "white", color = "black", pch = 21, size = 2.5) +
ylim(-6000, 6000) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle(paste0("Absolute change in MFL ridership, ", i)) +
ylab("Difference in ridership from 2001") +
xlab("")
ggsave(paste0("abs_", toString(i), ".png"), width = 7.5, height = 6)
}
#====================================
# Script to create MFL visualization
#====================================
# Housekpeeing
rm(list = ls())
setwd("/Users/johnricco/Documents/Projects/MFL")
library(dplyr)
library(ggplot2)
library(reshape2)
# Read and transform data
d <- lapply(c("weekday.csv", "annual.csv"), read.csv, stringsAsFactors = F)
d <- lapply(d, function(x) x <- x %>% mutate(order = 1:28))
names(d) <- c("weekday", "annual")
d$weekday$FISCAL.YEAR <- factor(d$weekday$order, levels = d$weekday$order, labels = d$weekday$FISCAL.YEAR, ordered = T)
d$annual$FISCAL.YEAR <- factor(d$annual$order, levels = d$annual$order, labels = d$annual$FISCAL.YEAR, ordered = T)
get_first <- function(x) {
first_val <- x[1]
return(first_val)
}
for (i in 1:2) {
d[[i]] <- melt(d[[i]], id = "FISCAL.YEAR")
colnames(d[[i]]) <- c("Station", "Year", "Ridership")
d[[i]] <- d[[i]] %>%
mutate(Year = substr(Year, 2, 5)) %>%
mutate(Year = as.numeric(Year)) %>%
arrange(Station, Year) %>%
filter(Year >= 2001 | Year <= 2016) %>%
group_by(Station) %>%
mutate(Index = Ridership / get_first(Ridership) * 100) %>%
mutate(Change = Ridership - get_first(Ridership))
}
# Plot data
for (i in 2001:2016) {
ggplot(filter(d$weekday, Year == i), aes(x = Station, y = Index, group = 1)) +
geom_line(aes(y = 100)) +
geom_line(color = "#207DC1", size = 3) +
geom_point(fill = "white", color = "black", pch = 21, size = 2.5) +
ylim(0, 300) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle(paste0("Relative growth in MFL ridership, ", i)) +
ylab("Index of average weekday ridership (2001 = 100)") +
xlab("")
ggsave(paste0(toString(i), ".png"), width = 7.5, height = 6)
}
for (i in 2001:2016) {
ggplot(filter(d$weekday, Year == i), aes(x = Station, y = Change, group = 1)) +
geom_line(aes(y = 0)) +
geom_line(color = "#207DC1", size = 3) +
geom_point(fill = "white", color = "black", pch = 21, size = 2.5) +
ylim(-6000, 6000) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle(paste0("Absolute change in MFL ridership, ", i)) +
ylab("Difference in average weekday ridership from 2001") +
xlab("")
ggsave(paste0("abs_", toString(i), ".png"), width = 7.5, height = 6)
}
rm(list = ls())
setwd("/Users/johnricco/Documents/Projects/everylotphilly/")
library(dplyr)
library(stringr)
d <- read.csv("raw_data.csv", stringsAsFactors = F)
colnames(d)
colnames(d)[1] <- "id"
to_csv <- %>%
select(id, address = Location, zip = Zip.code, floors = Number.Stories, coord = Coordinates) %>%
mutate(coord = str_replace(coord, " ", "")) %>%
mutate(lat = str_sub(coord, 2, regexpr(",", coord) - 1)) %>%
mutate(long = str_sub(coord, regexpr(",", coord) + 1, nchar(coord) - 1))
colnames(d)[1] <- "id"
to_csv <- %>%
select(id, address = Location, zip = Zip.code, floors = Number.Stories, coord = Coordinates) %>%
mutate(coord = str_replace(coord, " ", "")) %>%
mutate(lat = str_sub(coord, 2, regexpr(",", coord) - 1)) %>%
mutate(long = str_sub(coord, regexpr(",", coord) + 1, nchar(coord) - 1))
to_csv <- d %>%
select(id, address = Location, zip = Zip.code, floors = Number.Stories, coord = Coordinates) %>%
mutate(coord = str_replace(coord, " ", "")) %>%
mutate(lat = str_sub(coord, 2, regexpr(",", coord) - 1)) %>%
mutate(long = str_sub(coord, regexpr(",", coord) + 1, nchar(coord) - 1))
to_csv <- d %>%
select(id, address = Location, zip = Zip.Code, floors = Number.Stories, coord = Coordinates) %>%
mutate(coord = str_replace(coord, " ", "")) %>%
mutate(lat = str_sub(coord, 2, regexpr(",", coord) - 1)) %>%
mutate(long = str_sub(coord, regexpr(",", coord) + 1, nchar(coord) - 1))
View(to_csv)
to_csv <- d %>%
select(id, address = Location, zip = Zip.Code, floors = Number.Stories, coord = Coordinates) %>%
mutate(coord = str_replace(coord, " ", "")) %>%
mutate(lat = str_sub(coord, 2, regexpr(",", coord) - 1)) %>%
mutate(long = str_sub(coord, regexpr(",", coord) + 1, nchar(coord) - 1)) %>%
select(-coord) %>%
filter(distinct(address)) %>%
arrange(id)
?deistinct
?distinct
distinct(c("a", "a"))
to_csv <- d %>%
select(id, address = Location, zip = Zip.Code, floors = Number.Stories, coord = Coordinates) %>%
mutate(coord = str_replace(coord, " ", "")) %>%
mutate(lat = str_sub(coord, 2, regexpr(",", coord) - 1)) %>%
mutate(long = str_sub(coord, regexpr(",", coord) + 1, nchar(coord) - 1)) %>%
select(-coord) %>%
distinct(address)
View(to_csv)
write.csv(to_csv, "lots.csv", row.names = F)
#=====================================
# Script to clean up everylot CSV file
#=====================================
rm(list = ls())
setwd("/Users/johnricco/Documents/Projects/everylotphilly/")
library(dplyr)
library(stringr)
d <- read.csv("raw_data.csv", stringsAsFactors = F)
colnames(d)[1] <- "id"
to_csv <- d %>%
select(id, address = Location, zip = Zip.Code, floors = Number.Stories, coord = Coordinates) %>%
mutate(coord = str_replace(coord, " ", "")) %>%
mutate(lat = str_sub(coord, 2, regexpr(",", coord) - 1)) %>%
mutate(long = str_sub(coord, regexpr(",", coord) + 1, nchar(coord) - 1)) %>%
mutate(tweeted = NA) %>%
select(-coord) %>%
distinct(address)
write.csv(to_csv, "lots.csv", row.names = F)
View(to_csv)
rm(list = ls())
setwd("/Users/johnricco/Documents/Projects/everylotphilly/")
library(dplyr)
library(stringr)
d <- read.csv("raw_data.csv", stringsAsFactors = F)
colnames(d)[1] <- "id"
to_csv <- d %>%
select(id, address = Location, zip = Zip.Code, floors = Number.Stories, coord = Coordinates) %>%
mutate(address = str_to_title(address)) %>%
mutate(coord = str_replace(coord, " ", "")) %>%
mutate(lat = str_sub(coord, 2, regexpr(",", coord) - 1)) %>%
mutate(long = str_sub(coord, regexpr(",", coord) + 1, nchar(coord) - 1)) %>%
mutate(tweeted = NA) %>%
select(-coord) %>%
distinct(address)
?str_to_title
?str_to_lower
library(stringr)
library(stringr)
?str_to_title
?str_to_lower
?str_sub
?stringr
?str_count
?str_to_title
??str_to_title
install.packages("stringr")
install.packages("stringr")
library(stringr)
library(dplyr)
?str_to_title
toTitleCase("hello")
totitle("hello")
toupper("hello")
toupper("hello")
str_to_title
rm(list=ls())
d <- read.csv("lots.csv")
View(d)
library(DBI)
library(RSQLite)
install.packages("RSQLLite")
install.packages("RSQLite")
con <- dbConnect(SQLite(), dbname = "lots.db")
library(RSQLite)
con <- dbConnect(SQLite(), dbname = "lots.db")
rm(d)
test_query <- dbSendQuery(con, "SELECT * FROM lots LIMIT 10")
test_data <- dbFetch(test_query)
View(test_data)
View(test_data)
d <- read.csv("lots.csv", stringsAsFactors = F)
View(d)
d$tweeted <- 0
View(d)
d %>% write.csv("lots.csv")
View(d)
colnames(d)[6] = "lon"
d %>% write.csv("lots.csv")
d %>% write.csv("lots.csv")
d %>% write.csv("lots.csv", row.names = F)
test_query <- dbSendQuery(con, "SELECT * FROM lots WHERE tweeted = 1")
test_data <- dbFetch(test_query)
test_query <- dbSendQuery(con, "SELECT * FROM lots WHERE address = '6628 N Broad St'")
test_data <- dbFetch(test_query)
View(test_data)
test_query <- dbSendQuery(con, "SELECT tweeted FROM lots WHERE address = '6628 N Broad St'")
test_data <- dbFetch(test_query)
View(test_data)
con <- dbConnect(SQLite(), dbname = "lots.db")
test_query <- dbSendQuery(con, "SELECT tweeted FROM lots WHERE address = '6628 N Broad St'")
test_data <- dbFetch(test_query)
View(test_data)
test_query <- dbSendQuery(con, "SELECT * FROM lots WHERE address = '6628 N Broad St'")
test_data <- dbFetch(test_query)
View(test_data)
test_query <- dbSendQuery(con, "SELECT * FROM lots ORDER BY id")
test_data <- dbFetch(test_query)
View(test_data)
View(d)
d$tweeted <- 0
unique(d$tweeted)
d$id2 <- row.names(d)
View(d)
L
d$id <- NULL
View(test_data)
View(d)
d$id <- d$id2
d$id2 <- NULL
View(d)
d <- d %>%
order(id)
d <- d %>%
select(id, address, zip, floors, lat, lon, tweeted)
View(d)
d %>% write.csv("lots.csv", row.names = T)
View(d)
test_query <- dbSendQuery(con, "SELECT * FROM lots ORDER BY id")
test_query <- dbSendQuery(con, "SELECT * FROM lots")
con <- dbConnect(SQLite(), dbname = "lots.db")
test_query <- dbSendQuery(con, "SELECT * FROM lots")
test_data <- dbFetch(test_query)
View(test_data)
test_query <- dbSendQuery(con, "SELECT * FROM lots ORDER BY id")
test_data <- dbFetch(test_query)
View(d)
View(test_data)
View(d)
View(d)
d %>% write.csv("lots.csv", row.names = F)
con <- dbConnect(SQLite(), dbname = "lots.db")
test_query <- dbSendQuery(con, "SELECT * FROM lots")
test_data <- dbFetch(test_query)
View(test_data)
test_data <- dbFetch(test_query)
test_query <- dbSendQuery(con, "SELECT * FROM lots")
con <- dbConnect(SQLite(), dbname = "lots.db")
test_query <- dbSendQuery(con, "SELECT * FROM lots")
test_data <- dbFetch(test_query)
View(test_data)
con <- dbConnect(SQLite(), dbname = "lots.db")
test_query <- dbSendQuery(con, "SELECT * FROM lots")
test_data <- dbFetch(test_query)
View(test_data)
View(test_data)
test_query <- dbSendQuery(con, "SELECT * FROM lots ORDER BY id")
con <- dbConnect(SQLite(), dbname = "lots.db")
test_query <- dbSendQuery(con, "SELECT * FROM lots ORDER BY id")
test_data <- dbFetch(test_query)
View(test_data)
d1<-read.csv("lots.csv", stringsAsFactors = F)
View(`d1`)
)
test_data$id %>% View()
View(test_data)
test_data$id %>% class()
a <- ("100, "20", "3")
a <- ("100", "20", "3")
a <- c("100", "20", "3")
a
arrange(a)
order("a")
View(test_data)
lapply(d$address, nchar) %>% unlist() %>% max()
lapply(d$address, nchar) %>% unlist() %>% table()
con <- dbConnect(SQLite(), dbname = "lots.db")
test_query <- dbSendQuery(con, "SELECT * FROM lots")
test_data <- dbFetch(test_query)
View(test_data)
View(`d1`)
?write.csv
d1 %>% write.csv("lots.csv", row.names = F, col.names = F)
d2 <- read.csv("lots.csv")
View(`d2`)
d1 %>% write.csv("lots.csv", row.names = F)
rm(d2, d)
d1 %>% write.csv("lots.csv", row.names = F)
View(`d1`)
d1[, 2000]
d1[2000, ]
d1[1800, ]
